{
  "require": {
    "prefix": "region-js",
    "body": [
      "// #region    ${1:title}",
      "${0:text}",
      "// #endregion ${1:title}"
    ],
    "description": "region"
  },
  "const statement": {
    "prefix": "consti",
    "body": "const ${1:name} = ${2:value};"
  },
  "let statement": {
    "prefix": "leti",
    "body": "let ${1:name} = ${2:value}"
  },
  "console.log": {
    "prefix": "cl",
    "body": "console.log(${0})"
  },
  "If Statement": {
    "prefix": "if",
    "body": ["if (${1:condition}) {", "\t$0", "}"],
    "description": "If Statement"
  },
  "else statement": {
    "prefix": "el",
    "body": "else {\n\t${0}\n}"
  },
  "else if statement": {
    "prefix": "elif",
    "body": "else if (${1:condition}) {\n\t${0}\n}"
  },
  "named function": {
    "prefix": "fn",
    "body": "function ${1:name} (${2:arguments}) {\n\t${0}\n}"
  },
  "arrow function": {
    "prefix": "af",
    "body": "(${1:arguments}) => ${2:statement}"
  },
  "For Loop": {
    "prefix": "for",
    "body": [
      "for (let ${1:i} = 0; ${1:i} < ${2:arr}.length; ${1:i}++) {",
      "\tconst ${3:element} = ${2:arr}[${1:i}];",
      "\t$0",
      "}"
    ],
    "description": "For Loop"
  },
  "For-Each Loop": {
    "prefix": "foreach",
    "body": ["${1:arr}.forEach(${2:element} => {", "\t$0", "});"],
    "description": "For-Each Loop"
  },
  "For-In Loop": {
    "prefix": "forin",
    "body": [
      "for (const ${1:key} in ${2:object}) {",
      "\tif (${2:object}.hasOwnProperty(${1:key})) {",
      "\t\tconst ${3:element} = ${2:object}[${1:key}];",
      "\t\t$0",
      "\t}",
      "}"
    ],
    "description": "For-In Loop"
  },
  "return": {
    "prefix": "return",
    "body": "return ${0};"
  }
}
